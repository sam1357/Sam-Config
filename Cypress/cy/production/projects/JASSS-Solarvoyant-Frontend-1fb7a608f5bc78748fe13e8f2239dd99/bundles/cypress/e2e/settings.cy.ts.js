/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
var __webpack_exports__ = {};
/*!************************************!*\
  !*** ./cypress/e2e/settings.cy.ts ***!
  \************************************/

describe("UserDataContainer", function () {
    var username = "testUser";
    var email = "".concat(Math.random().toString(36).substring(2, 15), "@test.com"); // random email
    var password = "testPassword";
    beforeEach(function () {
        cy.signup(username, email, password);
        cy.visit("/dashboard/settings");
    });
    afterEach(function () {
        cy.request({
            method: "POST",
            url: "/api/auth/login",
            body: JSON.stringify({ email: email, password: password }),
            failOnStatusCode: false,
        }).then(function (res) {
            if (res.status === 200) {
                var userID = res.body.user.id;
                expect(userID).to.not.equal("");
                cy.request("DELETE", "/api/deleteUser", { userID: userID }).then(function (res) {
                    expect(res.status).to.equal(200);
                });
            }
        });
    });
    it("allows updating username", function () {
        var newUsername = "newUsername";
        // Type new username into the input field and submit the form
        cy.get('input[name="username"]').clear();
        cy.get('input[name="username"]').type(newUsername);
        cy.get("Button").contains("Update Details").click();
        // Ensure success message is displayed
        cy.get(".chakra-alert").should("contain.text", "Success");
    });
    it("allows changing password", function () {
        // Type current and new password into the input fields and submit the form
        cy.get('input[name="currentPassword"]').clear();
        cy.get('input[name="currentPassword"]').type(password);
        cy.get('input[name="newPassword"]').clear();
        cy.get('input[name="newPassword"]').type("abcdef");
        cy.get("Button").contains("Change Password").click();
        // Ensure success message is displayed
        cy.get(".chakra-alert").should("contain.text", "Success");
        // sign out and sign in with new password
        cy.get("button").contains("Sign Out").click({ force: true });
        cy.login(email, "abcdef");
        cy.visit("/dashboard/settings");
        cy.contains(username);
    });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2V0dGluZ3MuY3kuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJzZXR0aW5ncy5jeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsUUFBUSxDQUFDLG1CQUFtQixFQUFFO0lBQzVCLElBQU0sUUFBUSxHQUFHLFVBQVUsQ0FBQztJQUM1QixJQUFNLEtBQUssR0FBRyxVQUFHLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLENBQUMsU0FBUyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsY0FBVyxDQUFDLENBQUMsZUFBZTtJQUN4RixJQUFNLFFBQVEsR0FBRyxjQUFjLENBQUM7SUFFaEMsVUFBVSxDQUFDO1FBQ1QsRUFBRSxDQUFDLE1BQU0sQ0FBQyxRQUFRLEVBQUUsS0FBSyxFQUFFLFFBQVEsQ0FBQyxDQUFDO1FBQ3JDLEVBQUUsQ0FBQyxLQUFLLENBQUMscUJBQXFCLENBQUMsQ0FBQztJQUNsQyxDQUFDLENBQUMsQ0FBQztJQUVILFNBQVMsQ0FBQztRQUNSLEVBQUUsQ0FBQyxPQUFPLENBQUM7WUFDVCxNQUFNLEVBQUUsTUFBTTtZQUNkLEdBQUcsRUFBRSxpQkFBaUI7WUFDdEIsSUFBSSxFQUFFLElBQUksQ0FBQyxTQUFTLENBQUMsRUFBRSxLQUFLLE9BQUEsRUFBRSxRQUFRLFVBQUEsRUFBRSxDQUFDO1lBQ3pDLGdCQUFnQixFQUFFLEtBQUs7U0FDeEIsQ0FBQyxDQUFDLElBQUksQ0FBQyxVQUFDLEdBQUc7WUFDVixJQUFJLEdBQUcsQ0FBQyxNQUFNLEtBQUssR0FBRyxFQUFFLENBQUM7Z0JBQ3ZCLElBQU0sTUFBTSxHQUFHLEdBQUcsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQztnQkFDaEMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDLEVBQUUsQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxDQUFDO2dCQUNoQyxFQUFFLENBQUMsT0FBTyxDQUFDLFFBQVEsRUFBRSxpQkFBaUIsRUFBRSxFQUFFLE1BQU0sUUFBQSxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsVUFBQyxHQUFHO29CQUMzRCxNQUFNLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFDLEVBQUUsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUM7Z0JBQ25DLENBQUMsQ0FBQyxDQUFDO1lBQ0wsQ0FBQztRQUNILENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQyxDQUFDLENBQUM7SUFFSCxFQUFFLENBQUMsMEJBQTBCLEVBQUU7UUFDN0IsSUFBTSxXQUFXLEdBQUcsYUFBYSxDQUFDO1FBRWxDLDZEQUE2RDtRQUM3RCxFQUFFLENBQUMsR0FBRyxDQUFDLHdCQUF3QixDQUFDLENBQUMsS0FBSyxFQUFFLENBQUM7UUFDekMsRUFBRSxDQUFDLEdBQUcsQ0FBQyx3QkFBd0IsQ0FBQyxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztRQUNuRCxFQUFFLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDLEtBQUssRUFBRSxDQUFDO1FBRXBELHNDQUFzQztRQUN0QyxFQUFFLENBQUMsR0FBRyxDQUFDLGVBQWUsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxjQUFjLEVBQUUsU0FBUyxDQUFDLENBQUM7SUFDNUQsQ0FBQyxDQUFDLENBQUM7SUFFSCxFQUFFLENBQUMsMEJBQTBCLEVBQUU7UUFDN0IsMEVBQTBFO1FBQzFFLEVBQUUsQ0FBQyxHQUFHLENBQUMsK0JBQStCLENBQUMsQ0FBQyxLQUFLLEVBQUUsQ0FBQztRQUNoRCxFQUFFLENBQUMsR0FBRyxDQUFDLCtCQUErQixDQUFDLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQ3ZELEVBQUUsQ0FBQyxHQUFHLENBQUMsMkJBQTJCLENBQUMsQ0FBQyxLQUFLLEVBQUUsQ0FBQztRQUM1QyxFQUFFLENBQUMsR0FBRyxDQUFDLDJCQUEyQixDQUFDLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQ25ELEVBQUUsQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLENBQUMsUUFBUSxDQUFDLGlCQUFpQixDQUFDLENBQUMsS0FBSyxFQUFFLENBQUM7UUFFckQsc0NBQXNDO1FBQ3RDLEVBQUUsQ0FBQyxHQUFHLENBQUMsZUFBZSxDQUFDLENBQUMsTUFBTSxDQUFDLGNBQWMsRUFBRSxTQUFTLENBQUMsQ0FBQztRQUMxRCx5Q0FBeUM7UUFDekMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsQ0FBQyxRQUFRLENBQUMsVUFBVSxDQUFDLENBQUMsS0FBSyxDQUFDLEVBQUUsS0FBSyxFQUFFLElBQUksRUFBRSxDQUFDLENBQUM7UUFDN0QsRUFBRSxDQUFDLEtBQUssQ0FBQyxLQUFLLEVBQUUsUUFBUSxDQUFDLENBQUM7UUFFMUIsRUFBRSxDQUFDLEtBQUssQ0FBQyxxQkFBcUIsQ0FBQyxDQUFDO1FBQ2hDLEVBQUUsQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDeEIsQ0FBQyxDQUFDLENBQUM7QUFDTCxDQUFDLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImRlc2NyaWJlKFwiVXNlckRhdGFDb250YWluZXJcIiwgKCkgPT4ge1xuICBjb25zdCB1c2VybmFtZSA9IFwidGVzdFVzZXJcIjtcbiAgY29uc3QgZW1haWwgPSBgJHtNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zdWJzdHJpbmcoMiwgMTUpfUB0ZXN0LmNvbWA7IC8vIHJhbmRvbSBlbWFpbFxuICBjb25zdCBwYXNzd29yZCA9IFwidGVzdFBhc3N3b3JkXCI7XG5cbiAgYmVmb3JlRWFjaCgoKSA9PiB7XG4gICAgY3kuc2lnbnVwKHVzZXJuYW1lLCBlbWFpbCwgcGFzc3dvcmQpO1xuICAgIGN5LnZpc2l0KFwiL2Rhc2hib2FyZC9zZXR0aW5nc1wiKTtcbiAgfSk7XG5cbiAgYWZ0ZXJFYWNoKCgpID0+IHtcbiAgICBjeS5yZXF1ZXN0KHtcbiAgICAgIG1ldGhvZDogXCJQT1NUXCIsXG4gICAgICB1cmw6IFwiL2FwaS9hdXRoL2xvZ2luXCIsXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7IGVtYWlsLCBwYXNzd29yZCB9KSxcbiAgICAgIGZhaWxPblN0YXR1c0NvZGU6IGZhbHNlLFxuICAgIH0pLnRoZW4oKHJlcykgPT4ge1xuICAgICAgaWYgKHJlcy5zdGF0dXMgPT09IDIwMCkge1xuICAgICAgICBjb25zdCB1c2VySUQgPSByZXMuYm9keS51c2VyLmlkO1xuICAgICAgICBleHBlY3QodXNlcklEKS50by5ub3QuZXF1YWwoXCJcIik7XG4gICAgICAgIGN5LnJlcXVlc3QoXCJERUxFVEVcIiwgYC9hcGkvZGVsZXRlVXNlcmAsIHsgdXNlcklEIH0pLnRoZW4oKHJlcykgPT4ge1xuICAgICAgICAgIGV4cGVjdChyZXMuc3RhdHVzKS50by5lcXVhbCgyMDApO1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfSk7XG5cbiAgaXQoXCJhbGxvd3MgdXBkYXRpbmcgdXNlcm5hbWVcIiwgKCkgPT4ge1xuICAgIGNvbnN0IG5ld1VzZXJuYW1lID0gXCJuZXdVc2VybmFtZVwiO1xuXG4gICAgLy8gVHlwZSBuZXcgdXNlcm5hbWUgaW50byB0aGUgaW5wdXQgZmllbGQgYW5kIHN1Ym1pdCB0aGUgZm9ybVxuICAgIGN5LmdldCgnaW5wdXRbbmFtZT1cInVzZXJuYW1lXCJdJykuY2xlYXIoKTtcbiAgICBjeS5nZXQoJ2lucHV0W25hbWU9XCJ1c2VybmFtZVwiXScpLnR5cGUobmV3VXNlcm5hbWUpO1xuICAgIGN5LmdldChcIkJ1dHRvblwiKS5jb250YWlucyhcIlVwZGF0ZSBEZXRhaWxzXCIpLmNsaWNrKCk7XG5cbiAgICAvLyBFbnN1cmUgc3VjY2VzcyBtZXNzYWdlIGlzIGRpc3BsYXllZFxuICAgIGN5LmdldChcIi5jaGFrcmEtYWxlcnRcIikuc2hvdWxkKFwiY29udGFpbi50ZXh0XCIsIFwiU3VjY2Vzc1wiKTtcbiAgfSk7XG5cbiAgaXQoXCJhbGxvd3MgY2hhbmdpbmcgcGFzc3dvcmRcIiwgKCkgPT4ge1xuICAgIC8vIFR5cGUgY3VycmVudCBhbmQgbmV3IHBhc3N3b3JkIGludG8gdGhlIGlucHV0IGZpZWxkcyBhbmQgc3VibWl0IHRoZSBmb3JtXG4gICAgY3kuZ2V0KCdpbnB1dFtuYW1lPVwiY3VycmVudFBhc3N3b3JkXCJdJykuY2xlYXIoKTtcbiAgICBjeS5nZXQoJ2lucHV0W25hbWU9XCJjdXJyZW50UGFzc3dvcmRcIl0nKS50eXBlKHBhc3N3b3JkKTtcbiAgICBjeS5nZXQoJ2lucHV0W25hbWU9XCJuZXdQYXNzd29yZFwiXScpLmNsZWFyKCk7XG4gICAgY3kuZ2V0KCdpbnB1dFtuYW1lPVwibmV3UGFzc3dvcmRcIl0nKS50eXBlKFwiYWJjZGVmXCIpO1xuICAgIGN5LmdldChcIkJ1dHRvblwiKS5jb250YWlucyhcIkNoYW5nZSBQYXNzd29yZFwiKS5jbGljaygpO1xuXG4gICAgLy8gRW5zdXJlIHN1Y2Nlc3MgbWVzc2FnZSBpcyBkaXNwbGF5ZWRcbiAgICBjeS5nZXQoXCIuY2hha3JhLWFsZXJ0XCIpLnNob3VsZChcImNvbnRhaW4udGV4dFwiLCBcIlN1Y2Nlc3NcIik7XG4gICAgLy8gc2lnbiBvdXQgYW5kIHNpZ24gaW4gd2l0aCBuZXcgcGFzc3dvcmRcbiAgICBjeS5nZXQoXCJidXR0b25cIikuY29udGFpbnMoXCJTaWduIE91dFwiKS5jbGljayh7IGZvcmNlOiB0cnVlIH0pO1xuICAgIGN5LmxvZ2luKGVtYWlsLCBcImFiY2RlZlwiKTtcblxuICAgIGN5LnZpc2l0KFwiL2Rhc2hib2FyZC9zZXR0aW5nc1wiKTtcbiAgICBjeS5jb250YWlucyh1c2VybmFtZSk7XG4gIH0pO1xufSk7XG4iXX0=
/******/ })()
;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,